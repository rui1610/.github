name: TF sample - dev/test/prod setup

on:
  workflow_dispatch:

    inputs:
          UNIT:
            description: "Your Business unit"
            required: true
            type: choice
            options:
              - Research
              - Purchase
              - Test
            default: "Research"
          GLOBALACCOUNT:
            description: "Your Global account subdomain"
            required: true
          REGION:
            description: "Region for the sub account"
            # Ensure to apply change in step2_usecase.json for destination attribute "URL"
            default: "us10"
            required: true
          IDP_TENANT:
            description: "Your IDP tenant"
            default: "xxxxxxx.accounts.ondemand.com"
            required: true

env:
  DIRECTORY_NAME: SAP BTP samples
  SUBACCOUNT_NAME: Create dev-test-prod landscape
  GITHUB_SAMPLES_REPO: https://github.com/SAP-samples/btp-terraform-samples
  GITHUB_SAMPLES_FOLDER: released/uc_dev-test-prod
  ######################################
  # Don't change these env values below
  ######################################
  # folder created by GitHub automatically within Docker container)!
  FOLDER_REPO: /__w/
  FOLDER_CLONED_CODE: code
  TF_VARS_FILE: terraform.tfvars
  BTP_USERNAME: ${{ secrets.BTP_USERNAME }}
  BTP_PASSWORD: ${{ secrets.BTP_PASSWORD }}
  CF_USER: ${{ secrets.BTP_USERNAME }}
  CF_PASSWORD: ${{ secrets.BTP_PASSWORD }}

jobs:
  setup_infrastructure:
    name: Run Terraform script
    runs-on: ubuntu-latest
    steps:
    - name: Get code from External repo
      run: |
        git clone ${{ env.GITHUB_SAMPLES_REPO }} ${{ env.FOLDER_CLONED_CODE }}
        cd ${{ env.FOLDER_CLONED_CODE }}/
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
    - name: Terraform Init
      id: init
      working-directory:  "${{ env.FOLDER_CLONED_CODE }}/${{env.GITHUB_SAMPLES_FOLDER}}"
      shell: bash
      run: |
        pwd
        ls -l
        echo "Running terraform script in dir: ${{ env.FOLDER_CLONED_CODE }}/${{env.GITHUB_SAMPLES_FOLDER}}"
        terraform init
    - name: Terraform Apply
      id: terraform_apply
      working-directory:  "${{ env.FOLDER_CLONED_CODE }}/${{env.GITHUB_SAMPLES_FOLDER}}"
      shell: bash
      run: |
        pwd
        ls -l
        terraform apply -var='custom_idp="${{github.event.inputs.IDP_TENANT}}"' -var='globalaccount="${{github.event.inputs.GLOBALACCOUNT}}"' -var='region="${{github.event.inputs.REGION}}"' -var='unit="${{github.event.inputs.UNIT}}"' -auto-approve
